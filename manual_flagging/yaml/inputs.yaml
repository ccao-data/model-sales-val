# This is a config file that is used for run specifications of the
# local flagging script.
---
# manual_update: A boolean setting to control flag updates. If set
# to "false", it initializes a new set of flags with each assigned
# a version number of "1". If set to "true", the script increments
# the version number by 1 for existing flags in sales; for sales
# without flags, it assigns a version number of "1". The latest
# version of each sale flag can be found in the "default"."vw_pin_sale" view.

manual_update: false

# TODO: List out attributes and map them to stat groups
housing_market_type: ["res_single_family", "res_multi_family", "res_all"]
run_tri: [1, 2]

run_config:
  tri:

# This config can be used in the potential situation where we need to only
# update x amount of sales where x+n amount of sales are needed for the
# statistical groupings. Should build this so that more than one column
# filter can be used. The values here should be a list object.
sales_to_write_filter:
  column:
  values:

stat_groups:
  tri1:
    res_single_family:
      columns:
        - "rolling_window"
        - "geography_split"
        - column: "char_bldg_age"
          bins: [1200, 2400]
        - column: "char_bldg_sf"
          bins: [40]
    res_multi_family:
      columns:
        - "rolling_window"
        - "geography_split"
        - column: "char_bldg_age"
          age_bin_specification: [20]
    condos:
      columns:
        - "rolling_window"
        - "geography_split"
  tri2:
    res_all:
      columns:
        - "rolling_window"
        - "township_code"
        - "class"
    condos:
      columns:
        - "rolling_window"
        - "township_code"
  tri3:
    res_all:
      columns:
        - "rolling_window"
        - "township_code"
        - "class"
    condos:
      columns:
        - "rolling_window"
        - "township_code"

iso_forest:
  res:
    - "meta_sale_price"
    - "sv_price_per_sqft"
    - "sv_days_since_last_transaction"
    - "sv_cgdr"
    - "sv_sale_dup_counts"
  condos: [
    "meta_sale_price",
    "sv_days_since_last_transaction",
    "sv_cgdr",
    "sv_sale_dup_counts"
  ]

housing_market_class_codes:
  res_single_family: [
    "202",
    "203",
    "204",
    "205",
    "206",
    "207",
    "208",
    "209",
    "210",
    "218",
    "219",
    "234",
    "278",
    "295"
  ]
  res_multi_family: ["211", "212"]
  condos: ["297", "299", "399"]
  res_all: [
    "202",
    "203",
    "204",
    "205",
    "206",
    "207",
    "208",
    "209",
    "210",
    "211",
    "212",
    "218",
    "219",
    "234",
    "278",
    "295"
  ]

# These are the price standard deviation bounds that the sales must exceed
# to be classified as an outlier
dev_bounds: [2, 2]

# 'start' and 'end' determine which sales will be written to the
# sale.flag table. Leave 'end' blank if we want to flag all sales
# since the start date
time_frame:
  start: "2020-01-01"
  end:

# How many total months to include in the grouping methodology
rolling_window_months: 12

# PTAX flags are only kept if the raw or sqft price is at least this
# many standard deviations away from the mean
ptax_sd: [1, 1]

# Flags are only applied if there are at least this many sales in the group
min_groups_threshold: 30
