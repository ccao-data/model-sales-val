# TODO: Add overview here
---


# The values in housing_run_type and run_tri will tell the sales val script
# which properties will be updated. The housing_run_type list currenty supports
# "res_single_family", "res_multi_family", and/or "condos". The run_tri van be
# 1, 2, and/or 3. We can run any combination of these
housing_run_type: ["res_single_family", "res_multi_family", "condos"]
run_tri: [1, 2, 3]

# tri_stat_groups maps the method to be used for each tri.
tri_stat_groups:
  # city
  1: "current"
  # north
  2: "og_mansueto"
  # south
  3: "og_mansueto"

stat_groups:
  current:
    res_single_family:
      columns:
        - "rolling_window"
        - "geography_split"
        - "bldg_age_bin"
        - "char_bldg_sf_bin"
      sf_bin_specification: [1200, 2400]
      age_bin_specification: [40]
    res_multi_family:
      columns:
        - "rolling_window"
        - "geography_split"
        - "bldg_age_bin"
      age_bin_specification: [20]
    condos:
      columns:
        - "rolling_window"
        - "geography_split"
  og_mansueto:
    res_single_family:
      columns:
        - "rolling_window"
        - "township_code"
        - "class"
    res_multi_family:
      columns:
        - "rolling_window"
        - "township_code"
        - "class"
    condos:
      columns:
        - "rolling_window"
        - "township_code"

iso_forest:
  res: [
    "meta_sale_price",
    "sv_price_per_sqft",
    "sv_days_since_last_transaction",
    "sv_cgdr",
    "sv_sale_dup_counts"
  ]
  condos: [
    "meta_sale_price",
    "sv_days_since_last_transaction",
    "sv_cgdr",
    "sv_sale_dup_counts"
  ]

housing_run_type_filters:
  res_single_family: [
    "202",
    "203",
    "204",
    "205",
    "206",
    "207",
    "208",
    "209",
    "210",
    "218",
    "219",
    "234",
    "278",
    "295"
  ]
  res_multi_family: ["211", "212"]
  condos: ["297", "299", "399"]

# These are the price standard deviation bounds that the sales must exceed
# to be classified as an outlier
dev_bounds: [2, 2]

# 'start' and 'end' determine which sales will be written to the
# sale.flag table. Leave 'end' blank if we want to flag all sales
# since the start date
time_frame:
  start: "2018-01-01"
  end:

# How many total months to include in the grouping methodology
rolling_window_months: 12

# PTAX flags are only kept if the raw or sqft price is at least this
# many standard deviations away from the mean
ptax_sd: [1, 1]

# Flags are only applied if there are at least this many sales in the group
min_groups_threshold: 30
